from math import sqrt

def euclidean_distance(row1, row2):
    distance = 0.0
    for i in range(len(row1)-1):
        distance += (row1[i] - row2[i])**2
    return sqrt(distance)

def get_neighbors(train, test_row, num_neighbors):
    distances = list()
    for train_row in train:
        dist = euclidean_distance(test_row, train_row)
        distances.append((train_row, dist))
        distances.sort(key=lambda tup: tup[1])
    neighbors = list()
    for i in range(num_neighbors):
        neighbors.append(distances[i][0])
    return neighbors

dataset = [[16.47,96.1],
    [16.47, 94.44],
    [20.09,92.54],
    [22.39,93.37],
    [25.23,97.24],
    [22.00,96.05],
    [20.47,97.02],
    [17.2,96.29],
    [16.30,97.38],
    [14.05,98.12],
    [16.53,97.38],
    [21.52,95.59],
    [19.41,97.13],
    [20.09,94.55]]

neighbors = get_neighbors(dataset, dataset[0], 14)
for neighbor in neighbors:
    print(neighbor)
